using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;

namespace Laba4SearchToGraph
{
    internal class Start_status
    {
    }
    class Program
    {
        static void Main(string[] args)
        {             
            char buffer;
            int start_strok = 0, start_column = 0;
            int finish_strok = 4, finish_column = 5;
            int strok = 10, column = 10;
            List<int> road = new List<int>();
            List<int> open = new List<int>();
            List<int> close = new List<int>();
            var path = System.IO.Path.GetFullPath(@"labirinth.txt");
            using (StreamReader streamReader = new StreamReader(path))
            {
                int[,] labirint = new int[strok, column];
                for (int index = 0; index < strok; index++)
                {
                    for (int secIndex = 0; secIndex < column; secIndex++)
                    {
                        buffer = (char)streamReader.Read();
                        labirint[index, secIndex] = Convert.ToInt32(buffer.ToString());
                    }
                    streamReader.ReadLine();
                }
                //////////////////////////////////////////////////               
                int current_stroka, current_column;
                open.Add(start_strok);open.Add(start_column);
                link1:
                while (open[0] < strok || open[1] < column)
                {
                    current_stroka = open[0]; current_column = open[1];
                    if(open[0] == finish_strok && open[1] == finish_column)
                    {
                        Console.WriteLine($"Персонаж в заданной точке");
                        close.Add(current_stroka); close.Add(current_column);
                        break;
                    }
                    open.RemoveRange(0, 2);
                    for(int index = 0; index < close.Count - 1; index += 2)
                    {
                        if (close[index] == current_stroka && close[index + 1] == current_column)
                            goto link1;
                    }
                    if (current_stroka < strok && labirint[current_stroka + 1, current_column] == 1)
                    {
                        open.Insert(0, current_column);
                        open.Insert(0, current_stroka + 1);
                    }
                    if (current_column < column && labirint[current_stroka, current_column + 1] == 1)
                    {
                        open.Insert(0, current_column + 1);
                        open.Insert(0, current_stroka);
                    }
                    if (current_column > 0 && current_column < column && labirint[current_stroka, current_column - 1] == 1)
                    {
                        open.Insert(0, current_column - 1);
                        open.Insert(0, current_stroka);
                    }
                    if (current_stroka > 0 && labirint[current_stroka - 1, current_column] == 1)
                    {
                        open.Insert(0, current_column);
                        open.Insert(0, current_stroka - 1);
                    }
                    close.Add(current_stroka);close.Add(current_column);
                }
                //////////////////////////////////////////////////
                for (int i = 0; i < strok; i++)
                {
                    for (int j = 0; j < column; j++)
                    {
                        for(int j_index = 0; j_index < close.Count - 1; j_index += 2)
                        {
                            if (close[j_index] == i && close[j_index + 1] == j)
                            {
                                Console.Write(labirint[i, j]);
                                break;
                            }
                        }
                        if(labirint[i,j] == 0 )
                            Console.Write(" ");
                    }
                    Console.WriteLine();
                }                
            }
            Console.ReadKey();
        }
    }
}
